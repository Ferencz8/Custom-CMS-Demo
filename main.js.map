{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backoffice/backoffice-routing.module.ts","webpack:///./src/app/backoffice/backoffice.component.html","webpack:///./src/app/backoffice/backoffice.component.scss","webpack:///./src/app/backoffice/backoffice.component.ts","webpack:///./src/app/backoffice/backoffice.module.ts","webpack:///./src/app/models/navbar.ts","webpack:///./src/app/models/widget.ts","webpack:///./src/app/models/widget.type.ts","webpack:///./src/app/navbar/components/add-navbar/add-navbar.component.html","webpack:///./src/app/navbar/components/add-navbar/add-navbar.component.scss","webpack:///./src/app/navbar/components/add-navbar/add-navbar.component.ts","webpack:///./src/app/navbar/components/navbar-list/navbar-list.component.html","webpack:///./src/app/navbar/components/navbar-list/navbar-list.component.scss","webpack:///./src/app/navbar/components/navbar-list/navbar-list.component.ts","webpack:///./src/app/navbar/navbar.module.ts","webpack:///./src/app/publicsite/publicsite-routing.module.ts","webpack:///./src/app/publicsite/publicsite.component.html","webpack:///./src/app/publicsite/publicsite.component.scss","webpack:///./src/app/publicsite/publicsite.component.ts","webpack:///./src/app/publicsite/publicsite.module.ts","webpack:///./src/app/services/navbar.service.ts","webpack:///./src/app/services/widget.service.ts","webpack:///./src/app/shared.module.ts","webpack:///./src/app/shared/app.settings.ts","webpack:///./src/app/shared/safe.html.pipe.ts","webpack:///./src/app/widget/widget-html/widget-html.component.html","webpack:///./src/app/widget/widget-html/widget-html.component.scss","webpack:///./src/app/widget/widget-html/widget-html.component.ts","webpack:///./src/app/widget/widget-list/widget-list.component.html","webpack:///./src/app/widget/widget-list/widget-list.component.scss","webpack:///./src/app/widget/widget-list/widget-list.component.ts","webpack:///./src/app/widget/widget-product/widget-product.component.html","webpack:///./src/app/widget/widget-product/widget-product.component.scss","webpack:///./src/app/widget/widget-product/widget-product.component.ts","webpack:///./src/app/widget/widget.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { PublicsiteComponent } from './publicsite/publicsite.component';\r\nimport { BackofficeComponent } from './backoffice/backoffice.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: BackofficeComponent },\r\n // { path: '/navbar', component: AppComponent, data: { tab: 'navbar' } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,\r\n     { enableTracing: true } // <-- debugging purposes only\r\n  )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet ></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    // navigate to default route\r\n    //this.router.navigate(['/navbars']);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SharedMaterialModule } from './shared.module';\r\nimport { NavbarModule } from './navbar/navbar.module';\r\nimport { WidgetModule } from './widget/widget.module';\r\nimport { PublicsiteModule } from './publicsite/publicsite.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BackofficeModule } from './backoffice/backoffice.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    SharedMaterialModule,\r\n    BackofficeModule,\r\n    NavbarModule,\r\n    WidgetModule,\r\n    PublicsiteModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BackofficeComponent } from './backoffice.component';\r\nimport { NavbarListComponent } from '../navbar/components/navbar-list/navbar-list.component';\r\nimport { WidgetListComponent } from '../widget/widget-list/widget-list.component';\r\nimport { AddNavbarComponent } from '../navbar/components/add-navbar/add-navbar.component';\r\nimport { WidgetHtmlComponent } from '../widget/widget-html/widget-html.component';\r\nimport { WidgetProductComponent } from '../widget/widget-product/widget-product.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'backoffice', component: BackofficeComponent, children: [\r\n      { path: 'navbars', component: NavbarListComponent },\r\n      { path: 'addnavbar', component: AddNavbarComponent },\r\n      { path: 'editnavbar/:id', component: AddNavbarComponent },\r\n      { path: 'widgets', component: WidgetListComponent },\r\n      { path: 'addHtmlWidget', component: WidgetHtmlComponent },\r\n      { path: 'editHtmlWidget/:id', component: WidgetHtmlComponent },\r\n      { path: 'addProductWidget', component: WidgetProductComponent },\r\n      { path: 'editProductWidget/:id', component: WidgetProductComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BackofficeRoutingModule { }\r\n","module.exports = \"<nav mat-tab-nav-bar>\\r\\n  <a mat-tab-link\\r\\n     *ngFor=\\\"let link of navLinks\\\"\\r\\n     [routerLink]=\\\"link.path\\\"\\r\\n     routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n     [active]=\\\"rla.isActive\\\">\\r\\n    {{link.label}}\\r\\n  </a>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhY2tvZmZpY2UvYmFja29mZmljZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-backoffice',\r\n  templateUrl: './backoffice.component.html',\r\n  styleUrls: ['./backoffice.component.scss']\r\n})\r\nexport class BackofficeComponent implements OnInit {\r\n  title = 'Backoffice';\r\n\r\n  navLinks = [\r\n    { label: 'Navbar', path: '/backoffice/navbars', isActive: true },\r\n    { label: 'Widget', path: '/backoffice/widgets' }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BackofficeComponent } from './backoffice.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BackofficeRoutingModule } from './backoffice-routing.module';\r\nimport { SharedMaterialModule } from '../shared.module';\r\nimport { SafeHtmlPipe } from '../shared/safe.html.pipe';\r\n\r\n@NgModule({\r\n  declarations: [BackofficeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    SharedMaterialModule,\r\n    BackofficeRoutingModule,\r\n  ],\r\n})\r\nexport class BackofficeModule { }\r\n","export class Navbar {\r\n\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n  isPublished: boolean;\r\n  displayOrder: number;\r\n\r\n  constructor(params: Navbar = {} as Navbar) {\r\n\r\n    this.id = params.id;\r\n    this.name = params.name;\r\n    this.url = params.url;\r\n    this.isPublished = params.isPublished;\r\n    this.displayOrder = params.displayOrder;\r\n  }\r\n}\r\n","import { WidgetType } from './widget.type';\r\n\r\nexport class Widget {\r\n  id: number;\r\n\r\n  name: string;\r\n\r\n  content: any;\r\n\r\n  widgetType: WidgetType;\r\n\r\n  isPublished: boolean;\r\n\r\n  displayOrder: number;\r\n}\r\n","\r\nexport enum WidgetType {\r\n  Html = 0,\r\n  Product = 1\r\n}\r\n","module.exports = \"<mat-card *ngIf=\\\"navbar$ | async as navbar; else loading\\\" class=\\\"bo-halfSize bo-centered bo-marginTop5perc\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title *ngIf=\\\"!isEdit\\\">Add a navbar element</mat-card-title>\\r\\n      <mat-card-title *ngIf=\\\"isEdit\\\">Edit a navbar element</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"bo-container bo-container__center\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Name</mat-label>\\r\\n          <input matInput required [(ngModel)]=\\\"navbar.name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Url</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"navbar.url\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-select [(ngModel)]=\\\"navbar.displayOrder\\\">\\r\\n            <mat-option *ngFor=\\\"let orderVal of orderVals\\\" [value]=\\\"orderVal\\\">{{orderVal}}</mat-option>\\r\\n          </mat-select>\\r\\n          <mat-label>\\r\\n            Display Order\\r\\n          </mat-label>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"bo-container__actionBtns\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save(navbar)\\\">Save</button>\\r\\n          <button mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <ng-template #loading>Loading User Data...</ng-template>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9jb21wb25lbnRzL2FkZC1uYXZiYXIvYWRkLW5hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Navbar } from 'src/app/models/navbar';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { NavbarService } from 'src/app/services/navbar.service';\r\n\r\n@Component({\r\n  selector: 'app-add-navbar',\r\n  templateUrl: './add-navbar.component.html',\r\n  styleUrls: ['./add-navbar.component.scss']\r\n})\r\nexport class AddNavbarComponent implements OnInit {\r\n\r\n\r\n  isEdit = false;\r\n  navbar$: Observable<Navbar>;\r\n  elementas: Navbar[] = [\r\n    { id: 1, name: 'About', url: '/about', isPublished: false, displayOrder: 1 },\r\n    { id: 2, name: 'Contacts', url: '/contacts', isPublished: true, displayOrder: 2 },\r\n    { id: 3, name: 'Case Studies', url: '/case-studies', isPublished: false, displayOrder: 3 },\r\n    { id: 4, name: 'Education', url: '/education', isPublished: true, displayOrder: 4 }\r\n  ];\r\n  orderVals = [0, 1, 2, 3, 4];\r\n  constructor(\r\n    private navbarService: NavbarService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.navbar$ = of(new Navbar());\r\n    if (this.router.url.includes('edit')) {\r\n      this.isEdit = true;\r\n      this.route.params.subscribe(params => {\r\n        const idParam = params.id;\r\n        this.navbarService.get(idParam).subscribe(res => {\r\n          this.navbar$ = of(res);\r\n        });\r\n      });\r\n      this.route.paramMap.pipe(\r\n        map((params: ParamMap) => {\r\n          this.navbarService.get(params.get('id')).subscribe(res => {\r\n            this.navbar$ = of(res);\r\n          });\r\n        })\r\n      );\r\n\r\n      // //check switchMap\r\n      // this.navbar$ = this.route.paramMap.pipe(\r\n      //   map((params: ParamMap) => {\r\n      //     return this.navbarService.get(params.get('id'));\r\n      //     //return this.elementas.find(n => n.id.toString() === params.get('id'));\r\n      //   })\r\n      // );\r\n    }\r\n  }\r\n\r\n  save(navbar: Navbar) {\r\n    console.log(navbar);\r\n    if (this.isEdit) {\r\n      this.navbarService.update(navbar).subscribe(() => {\r\n        this.router.navigate(['../backoffice/navbars']);\r\n      });\r\n    } else {\r\n      this.navbarService.add(navbar).subscribe(() => {\r\n        this.router.navigate(['../backoffice/navbars']);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['../backoffice/navbars']);\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"bo-centered bo-marginTop5perc\\\">\\r\\n  <div class=\\\"bo-card-header-cols\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title> Navbar elements </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <button mat-mini-fab color=\\\"primary\\\" routerLink=\\\"/backoffice/addnavbar\\\">\\r\\n      <mat-icon>add_circle</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <mat-card-content>\\r\\n    <table mat-table [dataSource]=\\\"dataSource$ | async \\\" class=\\\"bo-fullSize\\\">\\r\\n\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n                  The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Url Column -->\\r\\n      <ng-container matColumnDef=\\\"url\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Url </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.url}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- isPublished Column -->\\r\\n      <ng-container matColumnDef=\\\"isPublished\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is Published </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-icon *ngIf=\\\"!!element.isPublished\\\">radio_button_checked</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.isPublished\\\">radio_button_unchecked</mat-icon>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"edit(element.id)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9jb21wb25lbnRzL25hdmJhci1saXN0L25hdmJhci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Navbar } from 'src/app/models/navbar';\r\nimport { Observable } from 'rxjs';\r\nimport { NavbarService } from 'src/app/services/navbar.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar-list',\r\n  templateUrl: './navbar-list.component.html',\r\n  styleUrls: ['./navbar-list.component.scss']\r\n})\r\nexport class NavbarListComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'url', 'isPublished', 'actions'];\r\n\r\n  dataSource$: Observable<Navbar[]>;\r\n\r\n  constructor(private navbarService: NavbarService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource$ = this.navbarService.getAll();\r\n  }\r\n\r\n  edit(id) {\r\n    this.router.navigate([`/backoffice/editnavbar/${id}`]);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedMaterialModule } from '../shared.module';\r\nimport { AddNavbarComponent } from './components/add-navbar/add-navbar.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NavbarListComponent } from './components/navbar-list/navbar-list.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedMaterialModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    NavbarListComponent,\r\n    AddNavbarComponent\r\n  ],\r\n  exports: [\r\n    NavbarListComponent\r\n  ]\r\n})\r\nexport class NavbarModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PublicsiteComponent } from './publicsite.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'public', component: PublicsiteComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class PublicsiteRoutingModule { }\r\n","module.exports = \"<div id=\\\"navbar-main\\\">\\r\\n  <!-- Fixed navbar -->\\r\\n  <div class=\\\"navbar navbar-default navbar-fixed-top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\r\\n          <span class=\\\"icon icon-radio-checked\\\" style=\\\"font-size:30px; color:#1abc9c;\\\"></span>\\r\\n        </button>\\r\\n        <a class=\\\"navbar-brand hidden-xs hidden-sm smoothscroll\\\" href=\\\"#home\\\"><span class=\\\"icon icon-radio-checked\\\"\\r\\n            style=\\\"font-size:18px; color:#1abc9c;\\\"></span></a>\\r\\n      </div>\\r\\n      <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li *ngFor=\\\"let navbar of navbars$ | async\\\">\\r\\n            <a [href]=\\\"'/public' + navbar.url\\\" class=\\\"smoothscroll\\\">{{navbar.name}}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <!--/.nav-collapse -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- ==== HEADERWRAP ==== -->\\r\\n<div id=\\\"home\\\"></div>\\r\\n<div id=\\\"headerwrap\\\" name=\\\"home\\\">\\r\\n  <header class=\\\"clearfix\\\">\\r\\n    <h1>DEMO</h1>\\r\\n    <p>CMS Template.</p>\\r\\n  </header>\\r\\n</div>\\r\\n<!-- /headerwrap -->\\r\\n\\r\\n<!-- ==== GREYWRAP ==== -->\\r\\n<!-- <div *ngIf=\\\"widget$ | async as widget\\\" id=\\\"greywrap\\\" [innerHTML]=\\\"widget.content\\\">\\r\\n</div> -->\\r\\n<div *ngFor=\\\"let widget of widgets$ | async\\\">\\r\\n  <div [innerHTML]=\\\"widget.content | safeHtml\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<!-- greywrap -->\\r\\n\\r\\n\\r\\n<!-- ==== PORTFOLIO ==== -->\\r\\n<div class=\\\"container\\\" id=\\\"portfolio\\\" name=\\\"portfolio\\\">\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <br>\\r\\n    <h1 class=\\\"centered\\\">Portfolio</h1>\\r\\n    <hr>\\r\\n    <br>\\r\\n    <br>\\r\\n  </div>\\r\\n  <!-- /row -->\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <ng-container *ngFor=\\\"let productWidget of productWidgets$ | async\\\">\\r\\n        <!-- PORTFOLIO IMAGE 1 -->\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n          <div class=\\\"grid mask\\\">\\r\\n            <figure>\\r\\n              <img class=\\\"img-responsive\\\" [src]=\\\"productWidget.content?.imageUrl\\\" alt=\\\"\\\">\\r\\n              <figcaption>\\r\\n                <h5>{{productWidget.name}}</h5>\\r\\n                <a data-toggle=\\\"modal\\\" [href]=\\\"'/public#' + productWidget.id\\\" class=\\\"btn btn-primary btn-lg\\\">Take a\\r\\n                  Look</a>\\r\\n              </figcaption>\\r\\n              <!-- /figcaption -->\\r\\n            </figure>\\r\\n            <!-- /figure -->\\r\\n          </div>\\r\\n          <!-- /grid-mask -->\\r\\n        </div>\\r\\n        <!-- /col -->\\r\\n\\r\\n\\r\\n        <!-- MODAL SHOW THE PORTFOLIO IMAGE. In this demo, all links point to this modal. You should create\\r\\n                    a modal for each of your projects. -->\\r\\n\\r\\n        <div class=\\\"modal fade\\\" [id]=\\\"productWidget.id\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n          aria-hidden=\\\"true\\\">\\r\\n          <div class=\\\"modal-dialog\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n                <h4 class=\\\"modal-title\\\">{{productWidget.name}}</h4>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <p><img class=\\\"img-responsive\\\" [src]=\\\"productWidget.content?.imageUrl\\\" alt=\\\"\\\"></p>\\r\\n                <p>{{productWidget.content?.description}}</p>\\r\\n                <p><b><a [href]=\\\"productWidget.content?.link\\\">Visit Site</a></b></p>\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- /.modal-content -->\\r\\n          </div>\\r\\n          <!-- /.modal-dialog -->\\r\\n        </div>\\r\\n        <!-- /.modal -->\\r\\n      </ng-container>\\r\\n      <!-- /row -->\\r\\n      <br>\\r\\n      <br>\\r\\n    </div>\\r\\n    <!-- /row -->\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /container -->\\r\\n<div id=\\\"copyrights\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <p>\\r\\n      &copy; Copyrights Ferencz Veres\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpY3NpdGUvcHVibGljc2l0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Navbar } from '../models/navbar';\r\nimport { Widget } from '../models/widget';\r\nimport { NavbarService } from '../services/navbar.service';\r\nimport { WidgetService } from '../services/widget.service';\r\nimport { WidgetType } from '../models/widget.type';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-publicsite',\r\n  templateUrl: './publicsite.component.html',\r\n  styleUrls: ['./publicsite.component.scss']\r\n})\r\nexport class PublicsiteComponent implements OnInit {\r\n\r\n  navbars$: Observable<Navbar[]>;\r\n  widgets$: Observable<Widget[]>;\r\n  productWidgets$: Observable<Widget[]>;\r\n\r\n  constructor(private navbarService: NavbarService,\r\n              private widgetService: WidgetService) {\r\n\r\n    // this.navbars$ = of([\r\n    //   new Navbar({ id: 1, name: 'Home', url: '#home', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 2, name: 'About', url: '#about', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 3, name: 'Services', url: '#services', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 4, name: 'Team', url: '#team', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 5, name: 'Portfolio', url: '#portfolio', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 6, name: 'Blog', url: '#blog', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 7, name: 'Pricing Tables', url: '#pricing', isPublished: true, displayOrder: 0 }),\r\n    //   new Navbar({ id: 8, name: 'Contact', url: '#contact', isPublished: true, displayOrder: 0 }),\r\n    // ]);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navbars$ = this.navbarService.getAllPublished();\r\n\r\n    // use a custom pipe\r\n    this.widgets$ = this.widgetService.getAllPublishedOfType(WidgetType.Html);\r\n    this.productWidgets$ = this.widgetService.getAllPublishedOfType(WidgetType.Product).pipe(\r\n      map(res => {\r\n        return res.map(value => {\r\n          value.content = JSON.parse(value.content);\r\n          console.log(value);\r\n          return value;\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PublicsiteComponent } from './publicsite.component';\r\nimport { PublicsiteRoutingModule } from './publicsite-routing.module';\r\nimport { SafeHtmlPipe } from '../shared/safe.html.pipe';\r\n\r\n@NgModule({\r\n  declarations: [PublicsiteComponent, SafeHtmlPipe],\r\n  imports: [\r\n    CommonModule,\r\n    PublicsiteRoutingModule\r\n  ]\r\n})\r\nexport class PublicsiteModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Navbar } from '../models/navbar';\r\nimport { AppSettings } from '../shared/app.settings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavbarService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getAllPublished(): Observable<Navbar[]> {\r\n    return this.httpClient.get<Navbar[]>(`${AppSettings.API_ENDPOINT}/navbar/GetAllPublished`);\r\n  }\r\n\r\n  public getAll(): Observable<Navbar[]> {\r\n    return this.httpClient.get<Navbar[]>(`${AppSettings.API_ENDPOINT}/navbar`);\r\n  }\r\n\r\n  public get(id): Observable<Navbar> {\r\n    return this.httpClient.get<Navbar>(`${AppSettings.API_ENDPOINT}/navbar/${id}`);\r\n  }\r\n\r\n  public add(navbar: Navbar) {\r\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/navbar`, navbar);\r\n  }\r\n\r\n  public update(navbar: Navbar) {\r\n    return this.httpClient.put(`${AppSettings.API_ENDPOINT}/navbar/${navbar.id}`, navbar);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettings } from '../shared/app.settings';\r\nimport { Widget } from '../models/widget';\r\nimport { Observable } from 'rxjs';\r\nimport { formatDate } from '@angular/common';\r\nimport { WidgetType } from '../models/widget.type';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getAllPublished(): Observable<Widget[]> {\r\n    return this.httpClient.get<Widget[]>(`${AppSettings.API_ENDPOINT}/widget/GetAllPublished`);\r\n  }\r\n\r\n  public getAllPublishedOfType(widgetType: WidgetType): Observable<Widget[]> {\r\n    return this.httpClient.get<Widget[]>(`${AppSettings.API_ENDPOINT}/widget/GetAllPublishedOfType?widgetType=${widgetType}`);\r\n  }\r\n\r\n  public getAll(): Observable<Widget[]> {\r\n    return this.httpClient.get<Widget[]>(`${AppSettings.API_ENDPOINT}/widget`);\r\n  }\r\n\r\n  public get(id): Observable<Widget> {\r\n    return this.httpClient.get<Widget>(`${AppSettings.API_ENDPOINT}/widget/${id}`);\r\n  }\r\n\r\n  public add(widget: Widget) {\r\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/widget`, widget);\r\n  }\r\n\r\n  public update(widget: Widget) {\r\n    return this.httpClient.put(`${AppSettings.API_ENDPOINT}/widget/${widget.id}`, widget);\r\n  }\r\n\r\n  public upload(file: File){\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/widget/UploadFile`, formData);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatGridListModule, MatButtonModule, MatTabsModule, MatToolbarModule, MatSliderModule, MatTableModule } from '@angular/material';\r\nimport { MatCardModule, MatInputModule, MatSelectModule, MatAutocompleteModule } from '@angular/material';\r\nimport { MatIconModule, MatTooltipModule, MatIconRegistry } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatSliderModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatTableModule\r\n  ],\r\n  exports: [\r\n    MatSliderModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [\r\n    MatIconRegistry\r\n  ]\r\n})\r\n\r\nexport class SharedMaterialModule { }\r\n","export class AppSettings {\r\n  public static API_ENDPOINT = 'https://backofficedemo.azurewebsites.net/api';\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml'})\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n","module.exports = \"<mat-card *ngIf=\\\"widget$ | async as widget\\\" class=\\\"bo-halfSize bo-centered bo-marginTop5perc\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Add an Html Widget</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"bo-container bo-container__center\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-label>Name</mat-label>\\r\\n        <input matInput required [(ngModel)]=\\\"widget.name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Html Content</mat-label>\\r\\n      <br />\\r\\n      <angular-editor [placeholder]=\\\"'Enter text here...'\\\" [(ngModel)]=\\\"widget.content\\\" [config]=\\\"editorConfig\\\"></angular-editor>\\r\\n      <br />\\r\\n      <div class=\\\"bo-container__actionBtns\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save(widget)\\\">Save</button>\\r\\n        <button mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldC93aWRnZXQtaHRtbC93aWRnZXQtaHRtbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Widget } from 'src/app/models/widget';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppSettings } from 'src/app/shared/app.settings';\r\nimport { WidgetType } from 'src/app/models/widget.type';\r\n@Component({\r\n  selector: 'app-widget-html',\r\n  templateUrl: './widget-html.component.html',\r\n  styleUrls: ['./widget-html.component.scss']\r\n})\r\nexport class WidgetHtmlComponent implements OnInit {\r\n  isEdit = false;\r\n  widget$: Observable<Widget>;\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n      spellcheck: true,\r\n      height: 'auto',\r\n      minHeight: '0',\r\n      maxHeight: 'auto',\r\n      width: 'auto',\r\n      minWidth: '0',\r\n      translate: 'yes',\r\n      enableToolbar: true,\r\n      showToolbar: true,\r\n      placeholder: 'Enter text here...',\r\n      defaultParagraphSeparator: '',\r\n      defaultFontName: '',\r\n      defaultFontSize: '',\r\n      fonts: [\r\n        {class: 'arial', name: 'Arial'},\r\n        {class: 'times-new-roman', name: 'Times New Roman'},\r\n        {class: 'calibri', name: 'Calibri'},\r\n        {class: 'comic-sans-ms', name: 'Comic Sans MS'}\r\n      ],\r\n      customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: `${AppSettings.API_ENDPOINT}/widget/UploadFile`,\r\n    sanitize: false,\r\n    toolbarPosition: 'top',\r\n};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private widgetService: WidgetService) { }\r\n\r\n  ngOnInit() {\r\n    const widget = new Widget();\r\n    widget.widgetType = WidgetType.Html;\r\n    this.widget$ = of(widget);\r\n\r\n    if (this.router.url.includes('edit')) {\r\n      this.isEdit = true;\r\n      this.route.params.subscribe(params => {\r\n        const idParam = params.id;\r\n        this.widgetService.get(idParam).subscribe(res => {\r\n          this.widget$ = of(res);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  save(widget: Widget) {\r\n    console.log(widget);\r\n    if (this.isEdit) {\r\n      this.widgetService.update(widget).subscribe(() => {\r\n        this.router.navigate(['../backoffice/widgets']);\r\n      });\r\n    } else {\r\n      this.widgetService.add(widget).subscribe(() => {\r\n        this.router.navigate(['../backoffice/widgets']);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['../backoffice/widgets']);\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"bo-centered bo-marginTop5perc\\\">\\r\\n  <div class=\\\"bo-card-header-cols\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title> Widgets </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <div>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Select an option</mat-label>\\r\\n      <mat-select [(value)]=\\\"selected\\\">\\r\\n        <mat-option value=\\\"0\\\">Html</mat-option>\\r\\n        <mat-option value=\\\"1\\\">Product</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"addWidget()\\\">\\r\\n      <mat-icon>add_circle</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  </div>\\r\\n  <mat-card-content>\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"bo-fullSize\\\">\\r\\n\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n                    The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Url Column -->\\r\\n      <ng-container matColumnDef=\\\"type\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{widgetTypes[element.widgetType]}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- isPublished Column -->\\r\\n      <ng-container matColumnDef=\\\"isPublished\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is Published </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-icon *ngIf=\\\"!!element.isPublished\\\">radio_button_checked</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.isPublished\\\">radio_button_unchecked</mat-icon>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"edit(element)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldC93aWRnZXQtbGlzdC93aWRnZXQtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Widget } from 'src/app/models/widget';\r\nimport { WidgetType } from 'src/app/models/widget.type';\r\nimport { WidgetService } from 'src/app/services/widget.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-widget-list',\r\n  templateUrl: './widget-list.component.html',\r\n  styleUrls: ['./widget-list.component.scss']\r\n})\r\nexport class WidgetListComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'type', 'isPublished', 'actions'];\r\n\r\n  selected = 0;\r\n  widgetTypes = WidgetType;\r\n  dataSource: Widget[];\r\n  constructor(private widgetService: WidgetService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.widgetService.getAll().subscribe(res => this.dataSource = res);\r\n  }\r\n\r\n  edit(element: Widget) {\r\n    switch (element.widgetType) {\r\n      case WidgetType.Html:\r\n        this.router.navigate([`/backoffice/editHtmlWidget/${element.id}`]);\r\n        break;\r\n      case WidgetType.Product:\r\n        this.router.navigate([`/backoffice/editProductWidget/${element.id}`]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  addWidget() {\r\n    if (this.selected == WidgetType.Html) {\r\n      this.router.navigate(['/backoffice/addHtmlWidget']);\r\n    } else if (this.selected == WidgetType.Product) {\r\n      this.router.navigate(['/backoffice/addProductWidget']);\r\n    } else {\r\n      this.router.navigate(['/backoffice/addHtmlWidget']);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"bo-halfSize bo-centered bo-marginTop5perc\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Add a Product Widget</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"bo-container bo-container__center\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-label>Name</mat-label>\\r\\n        <input matInput required [(ngModel)]=\\\"productWidget.name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Product Image</mat-label>\\r\\n      <br />\\r\\n      <ngx-file-drop dropZoneLabel=\\\"Drop files here\\\" (onFileDrop)=\\\"dropped($event)\\\" [accept]=\\\"acceptedFileExtensions\\\" [multiple]=\\\"false\\\">\\r\\n        <ng-template ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\r\\n          <span (click)=\\\"openFileSelector()\\\">Drag & Drop / Browse Files</span>\\r\\n        </ng-template>\\r\\n      </ngx-file-drop>\\r\\n      <img *ngIf=\\\"!!imgUrl\\\" [src]=\\\"imgUrl\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-label>Link</mat-label>\\r\\n        <input matInput required [(ngModel)]=\\\"link\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <mat-label>Description</mat-label>\\r\\n        <textarea matInput required [(ngModel)]=\\\"description\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n      <br />\\r\\n      <div class=\\\"bo-container__actionBtns\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n        <button mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldC93aWRnZXQtcHJvZHVjdC93aWRnZXQtcHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileSystemFileEntry, NgxFileDropEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport { Widget } from 'src/app/models/widget';\r\nimport { Observable, of } from 'rxjs';\r\nimport { WidgetService } from 'src/app/services/widget.service';\r\nimport { WidgetType } from 'src/app/models/widget.type';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-widget-product',\r\n  templateUrl: './widget-product.component.html',\r\n  styleUrls: ['./widget-product.component.scss']\r\n})\r\nexport class WidgetProductComponent implements OnInit {\r\n\r\n  isEdit = false;\r\n  productWidget: Widget;\r\n  link: string;\r\n  description: string;\r\n  imgUrl: string;\r\n  imgFile: File;\r\n  acceptedFileExtensions = 'jpg,jpeg,png';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private widgetService: WidgetService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.productWidget = new Widget();\r\n    if (this.router.url.includes('edit')) {\r\n      this.isEdit = true;\r\n      this.route.params.subscribe(params => {\r\n        const idParam = params.id;\r\n        this.widgetService.get(idParam).subscribe(res => {\r\n          this.productWidget = res;\r\n          //quick workaround\r\n          const productContent = JSON.parse(this.productWidget.content);\r\n          this.description = productContent.description;\r\n          this.link = productContent.link;\r\n          this.imgUrl = productContent.imageUrl;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public dropped(files: NgxFileDropEntry[]) {\r\n\r\n    for (const droppedFile of files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          this.imgFile = file;\r\n          // Here you can access the real file\r\n          console.log(droppedFile.relativePath, file);\r\n\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (event: any) => {\r\n            this.imgUrl = event.target.result;\r\n          };\r\n\r\n          reader.onerror = (event: any) => {\r\n            console.log(\"File could not be read: \" + event.target.error.code);\r\n          };\r\n\r\n          reader.readAsDataURL(file);\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n        console.log(droppedFile.relativePath, fileEntry);\r\n      }\r\n    }\r\n  }\r\n\r\n  save() {\r\n\r\n    if (this.imgFile) {\r\n      this.widgetService.upload(this.imgFile).subscribe((res: any) => {\r\n\r\n        let serverImgUrl = '';\r\n        if (!!res && !!res.imageUrl) {\r\n          serverImgUrl = res.imageUrl;\r\n        }\r\n        this.mapProductWidget(serverImgUrl);\r\n\r\n        if (this.isEdit) {\r\n          this.widgetService.update(this.productWidget).subscribe(res2 =>\r\n            this.router.navigate(['../backoffice/widgets'])\r\n          );\r\n        } else {\r\n          this.widgetService.add(this.productWidget).subscribe(res2 =>\r\n            this.router.navigate(['../backoffice/widgets'])\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n\r\n      if (this.isEdit) {\r\n        this.mapProductWidget(this.imgUrl);\r\n        this.widgetService.update(this.productWidget).subscribe(res2 =>\r\n          this.router.navigate(['../backoffice/widgets'])\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  mapProductWidget(imgUrl) {\r\n    this.productWidget.content = JSON.stringify({\r\n      imageUrl: imgUrl,\r\n      description: this.description,\r\n      link: this.link\r\n    });\r\n    this.productWidget.widgetType = WidgetType.Product;\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['../backoffice/widgets']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { SharedMaterialModule } from '../shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { WidgetListComponent } from './widget-list/widget-list.component';\r\nimport { WidgetHtmlComponent } from './widget-html/widget-html.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { WidgetProductComponent } from './widget-product/widget-product.component';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\n\r\n@NgModule({\r\n  declarations: [WidgetListComponent, WidgetHtmlComponent, WidgetProductComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AngularEditorModule,\r\n    HttpClientModule,\r\n    NgxFileDropModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class WidgetModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}